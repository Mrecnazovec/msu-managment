'use client'

import { useEffect, useState } from 'react'
import './form.scss'
import { redirect, useRouter } from 'next/navigation'
import { signOut } from 'next-auth/react'
import { updatePostsForAdmin } from '@/app/_actions/postActions'
import { useSession } from 'next-auth/react'
import Loading from '@/app/loading'
import Image from 'next/image'
import Link from 'next/link'

const Form = ({ param }) => {
	const { data: session, status } = useSession()

	const router = useRouter()

	const [fullName, setFullName] = useState(param[0].content)
	const [login, setLogin] = useState(param[1].content)
	const [password, setPassword] = useState(param[2].content)
	const [userId, setUserId] = useState(param[3].id)
	const [error, setError] = useState('')
	const [passwordState, setPasswordState] = useState({ type: 'password', text: 'Показать пароль' })
	const [imgPath, setImgPath] = useState(param[3].imgPath)
	const [selectedFile, setSelectedFile] = useState(null)
	const [isReady, setIsReady] = useState(false)
	const [imgChange, setImgChange] = useState('')

	useEffect(() => {
		if (selectedFile) {
			setSelectedFile(selectedFile)
		}
	}, [selectedFile])

	useEffect(() => {
		if (imgChange) {
			setImgChange(imgChange)
		}
	}, [imgChange])

	if (status === 'loading') {
		return <Loading />
	}

	if (status === 'unauthenticated') {
		redirect('/for-admin/auth')
	}

	const info = session?.user?.name
	if (info?._id !== param[3].id) {
		router.replace('/for-admin')
	}

	const handleFileChange = (e) => {
		const file = e.target.files[0]
		setSelectedFile(file)

		if (file) {
			const url = URL.createObjectURL(file)
			setImgPath(url)
		}
	}

	const handleSubmit = async (e) => {
		e.preventDefault()
		const data = new FormData()
		data.set('file', selectedFile)
		data.set('folder', 'avatar')

		try {
			if (fullName == param[0].content && login == param[1].content && password == param[2].content && !selectedFile && imgPath == param[3].imgPath) {
				setError('Данные не изменились')
				return
			}

			const response = await fetch('/api/upload', {
				method: 'POST',
				body: data,
			})

			const result = selectedFile ? await response.json() : ''

			const path = result ? result.path.replace(/\\/g, '/') : imgPath

			const object = { userId, fullName, login, password, path }
			console.log(object)

			const res = await updatePostsForAdmin(object)

			if (res.error) {
				setError(res.error)
				return
			}

			if (res.success) {
				setIsReady(true)
			} else {
				setIsReady(true)
			}
		} catch (error) {
			setError(error.message)
			console.log(error)
		}
	}

	const onClick = () => {
		if (passwordState.type === 'password') {
			setPasswordState({ type: 'text', text: 'Скрыть пароль' })
		} else {
			setPasswordState({ type: 'password', text: 'Показать пароль' })
		}
	}

	const deleteImg =()=>{
		setImgPath('')
	}

	return (
		<form onSubmit={handleSubmit} encType='multipart/form-data' className='form'>
			<label>
				<input onChange={handleFileChange} className='visually-hidden' type='file' />
				<div className='avatar-box'>
					{imgPath ? (
						<Image alt='' width={360} height={240} className='office-avatar' src={imgPath} />
					) : param[3].gender === 'male' ? (
						<svg width='150' height='150' viewBox='0 0 150 150' fill='none' xmlns='http://www.w3.org/2000/svg'>
							<g clipPath='url(#clip0_244_175)'>
								<path
									d='M66.8789 99.983C68.8499 102.536 71.79 104.158 75.0004 104.464C78.2261 104.15 81.1777 102.514 83.1539 99.9455C83.7559 99.2223 84.5106 98.6414 85.3638 98.2446C88.728 96.7753 91.6944 94.5268 94.0182 91.6848C95.2156 88.8632 95.8438 85.8328 95.8664 82.7678C95.8664 81.2885 97.0657 80.0892 98.545 80.0892C99.3382 80.1712 100.134 79.9617 100.784 79.4999C101.086 79.1017 101.233 78.608 101.199 78.1098C101.165 76.1116 101.564 74.1297 102.367 72.2999C102.595 71.7642 102.903 71.1214 103.233 70.4249L103.487 69.8892L103.533 69.7955C104.84 67.3339 104.569 65.6812 103.942 65.0142C103.345 64.4809 102.469 64.4025 101.786 64.8214C101.071 65.1187 100.265 65.1022 99.5629 64.7758C98.8504 64.4375 98.3115 63.8171 98.0763 63.0642C98.0139 62.8181 97.9718 62.5672 97.9504 62.3142V62.2714C97.0798 56.2232 94.7655 48.4499 91.0396 45.7258C89.0066 48.1848 84.587 50.8928 75.0004 50.8928C65.4138 50.8928 60.9888 48.1794 58.953 45.7285C54.5173 48.9428 52.4173 58.9982 51.9888 62.7026C51.8875 63.5523 51.3864 64.3024 50.6402 64.7213C49.8941 65.1402 48.9928 65.1774 48.2146 64.8214C47.8891 64.6648 47.5338 64.5798 47.1727 64.5723C46.7589 64.5597 46.3587 64.721 46.0691 65.0169C45.4423 65.6839 45.1718 67.3365 46.4789 69.7982L46.7789 70.4169C47.1138 71.1053 47.4164 71.7348 47.6468 72.2919C48.4425 74.1212 48.8484 76.0962 48.8388 78.091C48.7918 78.5836 48.9292 79.0761 49.2245 79.4732C49.8816 79.9446 50.689 80.1581 51.4932 80.0732C52.9726 80.0732 54.1718 81.2724 54.1718 82.7517C54.1923 85.8183 54.8129 88.8512 55.9986 91.6794C58.3424 94.5502 61.3367 96.821 64.7334 98.3035C65.5621 98.7008 66.2943 99.2739 66.8789 99.983Z'
									fill='#EFCA7A'
								/>
								<path
									d='M75 0C33.5786 0 0 33.5786 0 75C0 116.421 33.5786 150 75 150C116.421 150 150 116.421 150 75C149.953 33.5982 116.402 0.0472354 75 0ZM115.714 128.124C115.655 128.193 115.593 128.258 115.527 128.32C115.2 128.569 114.854 128.78 114.522 129.021C113.676 129.643 112.815 130.244 111.94 130.824C111.331 131.228 110.72 131.621 110.105 132.003C109.136 132.603 108.15 133.181 107.159 133.73C106.438 134.127 105.71 134.496 104.976 134.866C104.288 135.212 103.591 135.544 102.889 135.868C101.939 136.305 100.98 136.72 100.013 137.111C99.1768 137.448 98.3339 137.771 97.4839 138.078C96.7946 138.324 96.1027 138.559 95.408 138.782C94.1973 139.171 92.9732 139.535 91.733 139.854C91.1973 139.993 90.6321 140.121 90.083 140.237C89.0277 140.478 87.9652 140.696 86.8955 140.89C86.4268 140.973 85.9634 141.067 85.492 141.139C84.0268 141.372 82.5455 141.546 81.0509 141.675C80.6545 141.71 80.2473 141.737 79.8589 141.766C78.2518 141.881 76.6446 141.959 75.0375 141.959C73.4304 141.959 71.8018 141.881 70.2161 141.766C69.817 141.737 69.4125 141.71 69.0241 141.675C67.5295 141.541 66.0482 141.367 64.583 141.139C64.1116 141.067 63.6482 140.973 63.1795 140.89C62.108 140.697 61.0455 140.479 59.992 140.237C59.4429 140.111 58.8884 139.993 58.342 139.854C57.1018 139.535 55.8777 139.171 54.667 138.782C53.9705 138.561 53.2786 138.326 52.5911 138.078C51.7393 137.772 50.8964 137.45 50.0625 137.111C49.0964 136.72 48.1375 136.305 47.1857 135.868C46.4839 135.544 45.7875 135.212 45.0991 134.866C44.3652 134.496 43.6366 134.127 42.9161 133.73C41.9143 133.181 40.9286 132.603 39.9696 132.003C39.3536 131.622 38.742 131.229 38.1348 130.824C37.2598 130.244 36.3991 129.643 35.5527 129.021C35.2205 128.78 34.875 128.569 34.5482 128.32C34.4823 128.258 34.4197 128.193 34.3607 128.124C7.99693 107.992 0.359098 71.5849 16.4089 42.5545C17.1492 41.3099 18.7445 40.879 20.0107 41.5817C21.2769 42.2843 21.7554 43.866 21.0911 45.1527C6.90877 70.7803 12.745 102.852 35.0464 121.84C39.5924 112.824 48.8309 107.138 58.9286 107.143V101.148C55.8341 99.4928 53.1948 97.101 51.2438 94.1839C49.9224 91.3481 49.1377 88.2921 48.9295 85.1705C45.5553 84.4898 43.2161 81.4031 43.4732 77.9705C43.4659 76.7303 43.2004 75.5052 42.6938 74.3732C42.4929 73.8938 42.233 73.358 41.9491 72.7661L41.6813 72.2304C39.8296 69.3109 39.6784 65.6247 41.2848 62.5634C39.7848 55.5723 38.7402 43.7679 45.6402 35.0196C51.3482 27.7741 61.2241 24.1071 75 24.1071C88.7759 24.1071 98.6223 27.7661 104.33 34.9848C111.23 43.7116 110.199 55.5429 108.71 62.55C110.316 65.6306 110.156 69.3338 108.292 72.2652L108.051 72.7634C107.767 73.3473 107.515 73.883 107.309 74.3545C106.798 75.489 106.54 76.7211 106.554 77.9652C106.646 79.9165 105.942 81.8216 104.604 83.2446C103.642 84.2045 102.425 84.8682 101.097 85.1571C100.885 88.2862 100.09 91.3478 98.7509 94.1839C96.8003 97.1009 94.1633 99.4942 91.0714 101.154V107.143C101.169 107.138 110.408 112.824 114.954 121.84C132.484 106.883 140.198 83.3897 134.945 60.9518C129.692 38.5139 112.352 20.8859 90.0039 15.2644C67.6555 9.64296 44.0386 16.9687 28.7946 34.2509C27.8153 35.3604 26.122 35.4659 25.0125 34.4866C23.903 33.5073 23.7975 31.814 24.7768 30.7045C41.6264 11.6027 67.8558 3.71709 92.4454 10.3607C117.035 17.0043 135.725 37.026 140.662 62.0141C145.599 87.0023 135.929 112.628 115.714 128.124Z'
									fill='#EFCA7A'
								/>
								<path
									d='M64.2861 105.043V109.821C64.2861 115.739 69.0831 120.536 75.0004 120.536C80.9178 120.536 85.7147 115.739 85.7147 109.821V105.021C82.9047 107.956 79.0607 109.678 75.0004 109.821C70.9453 109.674 67.105 107.962 64.2861 105.043Z'
									fill='#EFCA7A'
								/>
								<path
									d='M91.0714 112.5H90.8491C90.8491 112.562 90.8143 112.618 90.8009 112.679C90.6548 113.486 90.447 114.28 90.1795 115.055C90.1312 115.195 90.0777 115.323 90.0268 115.473C89.7421 116.235 89.4 116.973 89.0036 117.683C88.9446 117.785 88.8804 117.881 88.8214 117.983C88.3959 118.712 87.9131 119.406 87.3777 120.059L87.3321 120.11C86.7901 120.754 86.198 121.354 85.5616 121.904C85.4893 121.969 85.425 122.036 85.3527 122.095C84.7264 122.619 84.0611 123.096 83.3625 123.52C83.2446 123.592 83.1295 123.664 83.0089 123.734C82.3084 124.139 81.5776 124.491 80.8232 124.784C80.692 124.835 80.5554 124.88 80.4268 124.929C79.6421 125.215 78.836 125.439 78.0161 125.598C77.9089 125.62 77.8018 125.63 77.6946 125.649C75.9111 125.974 74.0835 125.974 72.3 125.649C72.1929 125.63 72.0857 125.62 71.9786 125.598C71.1586 125.439 70.3525 125.215 69.5679 124.929C69.4339 124.88 69.3 124.835 69.1714 124.784C68.4172 124.49 67.6865 124.139 66.9857 123.734C66.8652 123.664 66.75 123.592 66.6321 123.52C65.9335 123.096 65.2682 122.619 64.642 122.095C64.5696 122.036 64.5054 121.969 64.433 121.904C63.7966 121.354 63.2046 120.754 62.6625 120.11L62.617 120.059C62.0815 119.405 61.5987 118.71 61.1732 117.98C61.1143 117.881 61.05 117.785 60.9938 117.686C60.5958 116.975 60.2529 116.236 59.9679 115.473C59.917 115.334 59.8634 115.205 59.8152 115.055C59.5476 114.28 59.3399 113.486 59.1938 112.679C59.1938 112.618 59.1562 112.562 59.1455 112.5H58.9286C50.4707 112.497 42.8056 117.479 39.375 125.21C39.6562 125.411 39.9348 125.617 40.2214 125.813C40.8455 126.241 41.4804 126.651 42.1179 127.053C42.9732 127.588 43.8429 128.111 44.7268 128.62C45.2625 128.917 45.7795 129.212 46.3125 129.493C46.9634 129.836 47.6143 130.179 48.2786 130.5C49.2054 130.948 50.1411 131.372 51.0857 131.772C51.7661 132.062 52.4598 132.324 53.1536 132.576C53.7054 132.785 54.2625 132.986 54.8196 133.179C55.6857 133.48 56.5589 133.763 57.4393 134.028C58.2964 134.282 59.1563 134.526 60.0241 134.743C60.6054 134.888 61.192 135.011 61.7786 135.147C62.7107 135.351 63.6491 135.529 64.5938 135.683C65.0063 135.753 65.4134 135.83 65.8259 135.892C67.0821 136.079 68.3464 136.221 69.6187 136.331C70.0098 136.363 70.4009 136.393 70.792 136.42C72.1902 136.513 73.5938 136.58 75.008 136.58C76.4223 136.58 77.8259 136.513 79.2241 136.42C79.6152 136.393 80.0062 136.363 80.3973 136.331C81.6696 136.221 82.9339 136.079 84.1875 135.895C84.6027 135.83 85.0125 135.753 85.425 135.683C86.3679 135.522 87.3054 135.344 88.2375 135.147C88.8241 135.019 89.4107 134.879 89.992 134.743C90.8598 134.526 91.7196 134.282 92.5768 134.028C93.4339 133.773 94.3313 133.492 95.1964 133.179C95.7536 132.986 96.3107 132.785 96.8625 132.576C97.5562 132.308 98.25 132.04 98.9304 131.772C99.875 131.372 100.811 130.948 101.737 130.5C102.402 130.179 103.053 129.836 103.704 129.493C104.239 129.209 104.768 128.918 105.289 128.62C106.173 128.12 107.043 127.597 107.898 127.053C108.536 126.651 109.171 126.249 109.795 125.813C110.081 125.617 110.36 125.411 110.641 125.21C107.208 117.474 99.5351 112.49 91.0714 112.5Z'
									fill='#EFCA7A'
								/>
								<path
									d='M47.1054 59.2206C48.0241 54.2733 50.5393 44.5929 56.5607 40.8938C58.6885 39.5746 61.4736 40.1202 62.9465 42.1447C63.525 42.9349 66.1206 45.5358 75 45.5358C83.8795 45.5358 86.475 42.9349 87.0536 42.1367C88.5221 40.1294 91.2832 39.5811 93.4072 40.8751C99.3215 44.5045 101.885 54.0349 102.868 59.2206C103.201 59.2314 103.533 59.2654 103.862 59.3224C104.874 53.242 105.08 44.5902 100.112 38.3063C95.4884 32.4376 87.0348 29.4644 75 29.4644C62.9652 29.4644 54.4875 32.4456 49.8482 38.3277C44.8902 44.6144 45.1072 53.2581 46.125 59.3251C46.449 59.2674 46.7766 59.2324 47.1054 59.2206Z'
									fill='#EFCA7A'
								/>
							</g>
							<defs>
								<clipPath id='clip0_244_175'>
									<rect width='150' height='150' fill='white' />
								</clipPath>
							</defs>
						</svg>
					) : (
						<svg width='150' height='150' viewBox='0 0 150 150' fill='none' xmlns='http://www.w3.org/2000/svg'>
							<g clipPath='url(#clip0_244_157)'>
								<path
									d='M107.77 127.112C103.575 117.038 95.1134 112.5 88.2589 112.5H88.125C86.8259 118.765 81.2411 123.268 74.8875 123.212C68.6196 123.155 63.1687 118.677 61.8884 112.5H61.7411C54.8866 112.5 46.425 117.038 42.1875 127.112C46.8696 130.039 58.5455 136.465 74.767 136.519C91.2375 136.575 103.096 130.034 107.77 127.112Z'
									fill='#EFCA7A'
								/>
								<path
									d='M75 0C33.5786 0 0 33.5786 0 75C0 116.421 33.5786 150 75 150C116.421 150 150 116.421 150 75C149.952 33.5973 116.403 0.0482143 75 0ZM37.3339 130.345C8.73214 110.885 -0.334821 72.8357 16.4223 42.5679C17.1616 41.3223 18.758 40.8938 20.025 41.5955C21.292 42.2973 21.7688 43.8804 21.1045 45.1661C6.28929 71.9384 13.3768 105.528 37.7437 124.031C40.058 118.808 43.8295 114.367 48.608 111.236C45.0911 109.398 42.8812 105.766 42.8705 101.799V56.2634C42.8705 38.5125 57.2625 24.1205 75.0134 24.1205C92.7643 24.1205 107.156 38.5125 107.156 56.2634V101.799C107.143 105.763 104.933 109.396 101.419 111.23C106.197 114.362 109.969 118.808 112.283 124.031C130.955 109.827 139.937 86.25 135.447 63.2223C130.958 40.1946 113.775 21.7179 91.1357 15.5705C68.4964 9.42321 44.3277 16.6688 28.808 34.2616C27.8277 35.3705 26.1348 35.4777 25.0259 34.4973C23.917 33.517 23.8098 31.8241 24.7902 30.7152C41.9277 11.2259 68.7857 3.39375 93.7125 10.6179C118.642 17.8393 137.151 38.8179 141.214 64.4518C145.278 90.0857 134.151 115.741 112.679 130.321C107.847 133.634 93.6187 142.46 73.5429 142.023C55.2214 141.624 42.2839 133.736 37.3339 130.345Z'
									fill='#EFCA7A'
								/>
								<path
									d='M95.0703 91.7142C94.1301 93.466 93.0533 95.1428 91.856 96.7312C90.7765 98.2258 89.622 99.6615 88.3926 101.036V107.143H96.4283C99.3881 107.143 101.785 104.745 101.785 101.786V82.4758C100.843 83.2901 99.6988 83.8339 98.472 84.0535C97.7274 85.899 96.4095 89.0517 95.0703 91.7142Z'
									fill='#EFCA7A'
								/>
								<path
									d='M74.9996 109.821C72.7683 109.816 70.6014 109.09 68.8174 107.751L68.113 107.191C67.7192 106.888 67.3469 106.546 66.9639 106.227V109.821C66.9639 114.26 70.5612 117.857 74.9996 117.857C79.438 117.857 83.0353 114.26 83.0353 109.821V106.238C82.6523 106.556 82.2826 106.894 81.8915 107.199C81.7389 107.336 81.4415 107.566 81.179 107.764C79.3951 109.098 77.2282 109.821 74.9996 109.821Z'
									fill='#EFCA7A'
								/>
								<path
									d='M99.713 64.5161C99.3192 64.7224 98.8746 64.8161 98.43 64.784C89.3282 64.1733 80.8692 59.8822 75.0005 52.9019C71.363 57.3724 66.563 60.7554 61.1308 62.6786C58.0639 63.8519 54.8362 64.5563 51.5576 64.7679C51.1317 64.7599 50.7112 64.6688 50.3201 64.5001C50.0603 64.3688 49.7764 64.2965 49.4844 64.2858C49.1951 64.2777 48.9166 64.3902 48.7157 64.5965C48.0728 65.2501 47.9308 66.9161 49.0558 69.1501C49.5085 70.0581 49.8942 70.867 50.1648 71.5849C50.8933 73.3206 51.2576 75.1876 51.2362 77.0679C51.1987 77.534 51.3219 77.9974 51.5898 78.3804C52.1308 78.7474 52.7817 78.9135 53.4326 78.8465C54.5416 78.8465 55.538 79.5295 55.9344 80.5661C55.9532 80.617 57.8657 85.5831 59.7166 89.3063C60.5469 90.7929 61.4737 92.226 62.4916 93.592C64.988 97.1251 67.9826 100.278 71.3871 102.948L72.0139 103.449C73.7764 104.78 76.2112 104.78 77.9737 103.449C78.1424 103.326 78.3273 103.181 78.4933 103.039C81.9353 100.345 84.9701 97.1626 87.496 93.5947C88.5192 92.234 89.446 90.801 90.2657 89.309C92.1407 85.559 94.0639 80.601 94.0826 80.5501C94.4791 79.5135 95.4755 78.8304 96.5844 78.8304C97.2326 78.9001 97.8835 78.734 98.4192 78.3617C98.6898 77.9813 98.8157 77.5179 98.7808 77.0545C98.7514 75.1554 99.1157 73.2724 99.8523 71.5233C100.104 70.851 100.49 70.042 100.94 69.1394C101.417 68.2688 101.706 67.3072 101.786 66.3188V66.2144C101.842 65.6304 101.668 65.0492 101.299 64.5938C100.843 64.2242 100.2 64.192 99.713 64.5161Z'
									fill='#EFCA7A'
								/>
								<path
									d='M51.9317 59.3733C54.4442 59.1188 56.9139 58.5403 59.279 57.651C64.8692 55.7036 69.613 51.884 72.704 46.8349C73.2237 46.0795 74.0835 45.6269 74.9996 45.6269C75.9157 45.6269 76.7755 46.0795 77.2951 46.8349C81.9344 53.976 89.5844 58.6045 98.0648 59.3974C99.2514 58.9501 100.537 58.8349 101.785 59.0653V56.2501C101.785 41.4563 89.7933 29.4644 74.9996 29.4644C60.2058 29.4644 48.2139 41.4563 48.2139 56.2501V59.0679C49.4567 58.8322 50.7424 58.9367 51.9317 59.3733Z'
									fill='#EFCA7A'
								/>
								<path
									d='M53.571 107.143H61.6067V101.036C60.3773 99.6615 59.2201 98.2231 58.1407 96.7258C56.9594 95.1321 55.8853 93.4606 54.9264 91.7249C53.5871 89.0463 52.2826 85.899 51.5407 84.0562C50.3085 83.8365 49.1594 83.2874 48.2139 82.4678V101.786C48.2139 104.745 50.6112 107.143 53.571 107.143Z'
									fill='#EFCA7A'
								/>
							</g>
							<defs>
								<clipPath id='clip0_244_157'>
									<rect width='150' height='150' fill='white' />
								</clipPath>
							</defs>
						</svg>
					)}
				</div>
				<p className='avatar-change'>Изменить аватар</p>
			</label>
			<p onClick={deleteImg} className='avatar-change'>
				Удалить аватар
			</p>
			<label>
				{param[0].title}
				<input type='text' value={fullName} onChange={(e) => setFullName(e.target.value)} />
			</label>
			<label>
				{param[1].title}
				<input type='text' value={login} onChange={(e) => setLogin(e.target.value)} />
			</label>
			<label>
				{param[2].title}
				<input type={passwordState.type} value={password} onChange={(e) => setPassword(e.target.value)} />
			</label>
			<button onClick={onClick} className='showPassword' type='button'>
				{passwordState.text}
			</button>
			{error && <div className='errorMessage'>{error}</div>}
			<button type='submit'>Принять изменения</button>
			{isReady && (
				<Link className='ready' href='/for-admin/auth' onClick={signOut}>
					Чтобы изменения вступили в силу, требуется перезайти в аккаунт
				</Link>
			)}
		</form>
	)
}

export default Form
